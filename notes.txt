For now using nfqueue-bindings, eventually switch to a hook into netfilter
https://blog.localh0rst.de/linux/perl-nfqueue-tcp-packet-manipulation/
http://i.stack.imgur.com/gvhtZ.png - iptable routing image
https://home.regit.org/netfilter-en/using-nfqueue-and-libnetfilter_queue/
https://www.kernel.org/doc/Documentation/networking/netlink_mmap.txt

Configuration
    - listen for packets to add vulnerabilities to list
    - listen for reset packet
    - these packets get dropped
   Future
      - securely transmit configuration bits

Operations
    - print out buffers
    - append a buffer
    - clear a buffer
    - execute a buffer
    - create outgoing TCP/UDP connection to send file x


Vulnerabilities
    - port, protocol, flag, operations permitted, executing as
    - exploit - regular expression containing
        - flag, operation, arguments 



Scripts -
   prep_game.pl - read simzero.xml and instantiate a specific contest(.xml)
   release_info.pl - copy exploits for each team into a tmp directory 
                     on their machine by sshfs mounting all of the machines
                     - sshfs needs to have the id file in the .ssh directory
                       there is no option to specify an identity file
   clean_info.pl - delete files generated by release_info.pl
   listener.pl - this is the main simzero exploit listener
   sender.pl - this starts and receives requests from listener.pl to
               exfiltrate data
